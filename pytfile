from sklearn.metrics import confusion_matrix    
import seaborn as sns
import pydicom as dicom
main = tkinter.Tk()
main.title("Alzheimer Brain Tumor Detection using VGG16 & 19 Algorithms")
main.geometry("1300x1200")
global filename
global classifier
global labels, X, Y, X_train, y_train, X_test, y_test, vgg16_model


def uploadDataset():
global filename
global labels
labels = []
filename = filedialog.askdirectory(initialdir=".")
pathlabel.config(text=filename)
text.delete('1.0', END)
text.insert(END,filename+" loaded\n\n");
text.insert(END,"Tumor found in dataset are\n\n")
for i in range(len(labels)):
text.insert(END,labels[i]+"\n")


def processDataset():
text.delete('1.0', END)
global filename, X, Y, X_train, y_train, X_test, y_test
if os.path.exists("model/X.txt.npy"):
X = np.load('model/X.txt.npy')
Y = np.load('model/Y.txt.npy')
else:
for root, dirs, directory in os.walk(filename):
for j in range(len(directory)):
name = os.path.basename(root)
if 'Thumbs.db' not in directory[j]:
ds = dicom.dcmread(root+'/'+directory[j])
img = ds.pixel_array
img = cv2.imread("test.png")
img = cv2.resize(img, (32,32))
im2arr = np.array(img)
im2arr = im2arr.reshape(32,32,3)
X.append(im2arr)
if name == 'Normal':
Y.append(0)
else:
Y.append(1)
print(name+" "+str(label))
X = np.asarray(X)
Y = np.asarray(Y)
np.save('model/X.txt',X)
np.save('model/Y.txt',Y)
X = X.astype('float32')
X = X/255
text.insert(END,"Dataset Preprocessing Completed\n"
text.insert(END,"Total images found in dataset : "+str(X.shape[0])+"\n\n")
indices = np.arange(X.shape[0])
np.random.shuffle(indices)
X = X[indices]
Y= Y[indices]
Y = to_categorical(Y)
X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2) #split dataset into train and test
text.insert(END,"80% images are used to train VGG16 & 19 : "+str(X_train.shape[0])+"\n")
text.insert(END,"20% images are used to test : "+str(X_test.shape[0])+"\n")
text.update_idletasks()

